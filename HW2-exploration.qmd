---
title: "HW2-exploration"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(janitor)
library(dplyr)
library(here)
library(stringr)
library(ggridges)
library(tmap)
library(sf)
```

https://www.carc.ox.ac.uk/XDB/ASP/searchOpen.asp

```{r}
rm(list = ls())

athenian <- read_csv(here('data/beazley_athenian_pottery_archive.csv'))

geometric <- read_csv(here('data/beazley_athenian_geometric.csv'))

corinthian <- read_csv(here('data/beazley_corinthian.csv'))
```

```{r}
athenian <- athenian %>%
  clean_names() %>%
  select(vase_number, 
         fabric, 
         technique,
         shape_name, 
         provenance, 
         date, 
         # inscriptions, 
         # decoration, 
         latitude, 
         longitude) %>%
  separate(date, into = c("max_age", "min_age"), sep = " to ") %>%
  mutate(
    min_age = as.numeric(min_age),
    max_age = as.numeric(max_age)
  ) %>%
  filter(!is.na(min_age) & !is.na(max_age))

athenian <- athenian %>%
  filter(technique %in% c("BLACK GLAZE", "BLACK-FIGURE", "RED-FIGURE", "BLACK PATTERN", "OUTLINE", "SILHOUETTE"))
```

```{r}
geometric <- geometric %>%
  clean_names() %>%
  select(vase_number, 
         fabric, 
         technique,
         shape_name, 
         provenance, 
         date, 
         # inscriptions, 
         # decoration, 
         latitude, 
         longitude) %>%
  separate(date, into = c("max_age", "min_age"), sep = " to ") %>%
  mutate(
    min_age = as.numeric(min_age),
    max_age = as.numeric(max_age)
  ) %>%
  mutate(technique = ifelse(is.na(technique), "GEOMETRIC", technique))

geometric <- geometric %>%
  filter(technique %in% c("SILHOUETTE", "OUTLINE", "GEOMETRIC"))
```

```{r}
corinthian <- corinthian %>%
  clean_names() %>%
  select(vase_number, 
         fabric, 
         technique,
         shape_name, 
         provenance, 
         date, 
         # inscriptions, 
         # decoration, 
         latitude, 
         longitude) %>%
  separate(date, into = c("max_age", "min_age"), sep = " to ") %>%
  mutate(
    min_age = as.numeric(min_age),
    max_age = as.numeric(max_age)
  )

corinthian <- corinthian %>%
  filter(technique %in% c("BLACK GLAZE", "BLACK-FIGURE", "RED-FIGURE", "BLACK PATTERN", "OUTLINE", "SILHOUETTE"))

corinthian %>%
  count(technique)
```

```{r}
pottery <- bind_rows(athenian, geometric, corinthian)
  
```

```{r}
patterns_to_remove <- c(", FRAGMENTS", ", FRAGMENT", " FRAGMENT", "A", " B", " BELLY", " \\(\\?\\)", " SQUT", " NECK", " COLUMN", ", SIN", ",ELLY", ",ELL", ",ELLS", ", TYPE", ", ", " ")

pottery <- pottery %>%
  mutate(shape_name = str_replace_all(shape_name, str_c(patterns_to_remove, collapse = "|"), ""))

df <- pottery %>%
  count(shape_name) 
```

```{r}
pottery <- pottery %>%
  mutate(shape_name = ifelse(shape_name == "CUP, LITTLE MSTERND", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTER, CLYX", "CALYX KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTER", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "FRGMENT", "FRAGMENT", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHOR,", "AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHOR, PNTHENIC PRIZE", "PANATHENAIC AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHORPNTHENIC PRIZE", "PANATHENAIC AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRATER,ELL", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTER,ELL", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHORBELLY", "AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "LEKYTHOSSQUT", "LEKYTHOS SQUAT", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "PLTE", "PLATE", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPLITTLE MSTERND", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPLITTLE MSTER LIP", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERCLYX", "CALYX KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERVOLUTE", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "STND", "STAND", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERCOLUMN", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHORPNTHENICPRIZE", "PANATHENAIC AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHORNECK", "AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "LBSTRON", "ALABASTRON", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "RYBLLOS", "RHYTON", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERBELL", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERS", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "KRTERBELLS", "KRATER", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPLITTLEMSTERND", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPLITTLEMSTER", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPSKYPHOS", "SKYPHOS", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPSTEMLESS", "CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "FIGUREVSE", "VASE", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "FRGMENTS", "FRAGMENT", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "CUPLITTLEMSTERLIP", "LITTLE MASTER CUP", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "PYXISLID", "PYXIS", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "MPHOR", "AMPHORA", shape_name)) %>%
  mutate(shape_name = ifelse(shape_name == "TNKRD", "TANKARD", shape_name)) %>%
  filter(shape_name != 'VRIOUS') %>%
  filter(shape_name != 'UNKNOWN')
```

```{r}
pottery <- pottery %>%
  group_by(shape_name) %>%
  filter(n() >= 200) %>%
  ungroup()

df <- pottery %>%
  count(shape_name) 
```

```{r}
pottery_age <- pottery %>%
  select(fabric, technique, shape_name, min_age, max_age) %>%
  mutate(avg_age = (min_age + max_age) / 2,
         century = as.integer(abs(avg_age) / 100))
```

```{r}
ggplot(pottery, aes(x = max_age, y = technique, fill = technique)) +
  geom_density_ridges(scale = 1) +
  theme_minimal() +
  labs(
    title = "Max Age by Techinque",
    x = "Max Age",
    y = "Technique"
  ) +
  scale_fill_brewer(palette = "Set3")
```

```{r}
ggplot(pottery, aes(x = fct_rev(fct_infreq(shape_name)), y = max_age, fill = shape_name)) +
  geom_col() +
  coord_flip() +
  theme_minimal() +
  labs(
    title = "Max Age by Shape",
    x = "Shape Name",
    y = "Max Age"
  )
```

```{r}
ggplot(pottery, aes(x = technique, y = max_age, fill = technique)) +
  geom_violin(trim = FALSE) +
  theme_minimal() +
  labs(
    title = "Max Age by Technique",
    x = "Max Age",
    y = "Technique"
  ) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  scale_fill_brewer(palette = "Set3")

```

```{r}
counting <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

centuries <- pottery_age %>%
  group_by(century) %>%
  summarise(
    most_common_technique = counting(technique),
    technique_count = sum(technique == counting(technique), na.rm = TRUE),
    most_common_shape = counting(shape_name),
    shape_name_count = sum(shape_name == counting(shape_name), na.rm = TRUE),
    most_common_fabric = counting(fabric),
    fabric_count = sum(fabric == counting(fabric), na.rm = TRUE)
  ) %>%
   mutate(century = if_else(is.na(century), 8, century))

```


# Map


```{r}
map <- st_read(here('data/med_contour_250m/med_contour_250m.shp'))
```

```{r}
pottery_sf <- pottery %>%
  filter(!is.na(latitude), !is.na(longitude)) 

pottery_sf <- st_as_sf(pottery_sf, coords = c("longitude", "latitude"), crs = 4326)

```

```{r}
bbox <- st_as_sfc(st_bbox(c(
  xmin = 29.309808,
  xmax = 44.840822,
  ymin = 10.773621,
  ymax = 38.108998)))

bbox <- st_transform(bbox, st_crs(4326))

map_clip <- st_intersection(map, bbox)
```

```{r}
tm_shape(map) +
  tm_lines(lwd = 0.01) +
tm_shape(pottery_sf) +
  tm_dots(col = 'red4')
```

